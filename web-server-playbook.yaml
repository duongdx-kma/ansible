- name: Apache web server
  hosts: web_server
  become: yes
  tasks:
    - name: Install package
      dnf:
        name:
          - httpd
          - firewalld
        state: present

    # START config httpd
    - name: Start httpd
      service:
        name: httpd
        state: started
        enabled: yes

    - name: Create resources directory
      file:
        path: "/var/www/{{ domain_name }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0775

    - name: Passing code to server
      copy:
        backup: true
        src: code/
        dest: "/var/www/{{ domain_name }}"

    - name: Passing env file to server
      template:
        src: templates/.env
        dest: "/var/www/{{ domain_name }}/.env"

    - name: Create config directory
      file:
          path: "{{ item }}"
          state: directory
      loop:
        - /etc/httpd/sites-available
        - /etc/httpd/sites-enabled

    - name: copy file with template CentOS
      template:
        src: templates/apache.conf
        dest: "/etc/httpd/sites-available/{{ domain_name }}.conf"
        backup: yes

    - name: check insert include configure or not ?
      shell: grep -Fxq "IncludeOptional sites-enabled/*.conf" /etc/httpd/conf/httpd.conf || echo "no match"
      register: check_config

    - name: Debug - check include config
      debug:
        msg: "{{ check_config }}"

    - name: insert configure
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        line: "IncludeOptional sites-enabled/*.conf"
      when: check_config.stdout == "no match"

    - name: Create symbolic link
      file:
        src: "/etc/httpd/sites-available/{{ domain_name }}.conf"
        dest: "/etc/httpd/sites-enabled/{{ domain_name }}.conf"
        state: link
      notify: Restart Apache
    # END config httpd

    # ---
    # START config firewalld
#    - name: Config Firewalld allow 'http' protocol
#      firewalld:
#        service: http
#        permanent: yes
#        state: enabled
#      notify: Restart Firewalld
#
#    - name: Config Firewalld allow 'ssh' protocol
#      firewalld:
#        service: ssh
#        permanent: yes
#        state: enabled
#      notify: Restart Firewalld
#
#    - name: Config Firewalld allow 'https' protocol
#      firewalld:
#        service: https
#        permanent: yes
#        state: enabled
#      notify: Restart Firewalld
    # END config firewalld

  # ---
  # handlers - handler will be triggered when config change
  handlers:
  - name: Restart Firewalld
    service:
      name: firewalld
      state: restarted

  - name: Restart Apache
    service:
      name: httpd
      state: restarted